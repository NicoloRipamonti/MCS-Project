library(Matrix)
library(e1071)
library(bigmemory)
A = readMM('../Matrici/ex15.mtx')
start_time <- Sys.time()
C = Cholesky(A)
print(Sys.time() - start_time)
View(C)
View(C)
C = chol(A)
print(Sys.time() - start_time)
A = readMM('../Matrici/ex15.mtx')
start_time <- Sys.time()
C = chol(A)
print(Sys.time() - start_time)
start_time <- Sys.time()
C = chol(A)
print(Sys.time() - start_time)
View(C)
View(C)
C
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx")
View(A)
View(A)
C = chol(A)
as.matrix(A)
A = as.matrix(data.frame(c(3,4,3),c(4,8,6),c(3,6,9)))
colnames(A) <- NULL
as.matrix(A)
C = chol(A)
C
t(A.chol)
t(C)
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx")
A = t(A)*A
dim(A)
sol = c(6867:1)
sol = rep(1, times = length(A))
sol
sol = rep(1, times = nrow(A))
sol
b = A * sol
C = chol(A)
y1 = t(C) \ b
y1 = t(C) / b
x1 = R / y1
x1 = C / y1
ErrAss = norm(x1 - sol) / norm(sol)
ErrAss = (norm(x1 - sol) / norm(sol))
Err.ass = norm(x1 - sol) / norm(sol)
Err.ass = norm(x1 - sol)
Err.ass = norm(x1 - sol) / norm(sol)
norm(sol)
Err.ass = norm(x1 - sol)
Err.ass
dim(A)
matrix(rexp(200, rate=.1), ncol=20)
M = matrix(rexp(200, rate=.1), ncol=20)
dim(M)
M = matrix(rexp(200, rate=1), ncol=20)
dim(M)
M = matrix(rexp(100, rate=1), ncol=10)
dim(M)
sqrt(1000)
sqrt(10000)
M = matrix(rexp(10000, rate=1), ncol=100)
dim(M)
M
dim(M)
M = matrix(rexp(10000, rate=1), ncol=100)
sol = rep(1, times = nrow(M))
b = M * sol
C = chol(M)
M = t(M)*M
M = matrix(rexp(10000, rate=1), ncol=100)
M = t(M)*M
sol = rep(1, times = nrow(M))
b = M * sol
C = chol(M)
MA = t(M)*M
M = matrix(rexp(10000, rate=1), ncol=100)
MA = t(M)*M
sol = rep(1, times = nrow(M))
b = M * sol
C = chol(MA)
M = matrix(rexp(10000, rate=1), ncol=100)
MA = t(M)*M
C = chol(MA)
Err.ass = norm(x1 - sol)
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx")
A = t(A)*A
sol = rep(1, times = nrow(A))
b = A * sol
C = chol(A)
y1 = t(C) / b
x1 = C / y1
Err.ass = norm(x1 - sol)
rm(start_time
rm(start_time)
rm(start_time)
x1-sol
M = x1-sol
M
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx",
package = matrix)
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx",
package = "Matrix")
showMethods(chol, inherited = FALSE) # show different methods
sy2 <- new("dsyMatrix", Dim = as.integer(c(2,2)), x = c(14, NA,32,77)) (c2 <- chol(sy2))#-> "Cholesky" matrix
sy2 <- new("dsyMatrix", Dim = as.integer(c(2,2)), x = c(14, NA,32,77))
(c2 <- chol(sy2)) #-> "Cholesky" matrix
stopifnot(all.equal(c2, chol(as(sy2, "dpoMatrix")), tolerance= 1e-13)) str(c2)
stopifnot(all.equal(c2, chol(as(sy2, "dpoMatrix")), tolerance= 1e-13)) str(c2)
stopifnot(all.equal(c2, chol(as(sy2, "dpoMatrix")), tolerance= 1e-13))
str(c2)
(c2 <- chol(sy2)) #-> "Cholesky" matrix
sy2 <- new("dsyMatrix", Dim = as.integer(c(2,2)), x = c(14, NA,32,77))
sy2
class(sy2)
class(MA)
class(A)
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx",
package = "Matrix")
B = readHB("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx")
library(Matrix)
library(e1071)
start_time <- Sys.time()
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
C = chol(A)
y = solve(t(C), b)
x = solve(C, y)
end_time <- Sys.time()
end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
object.size(chol(A))
library(e1071)
library(e1071)
source('~/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/R/script.R')
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory = object.size(chol(A))
Memory
Time
A = readMM("../Matrici/ex15.mtx")
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
time()
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
