stopifnot(all.equal(c2, chol(as(sy2, "dpoMatrix")), tolerance= 1e-13)) str(c2)
stopifnot(all.equal(c2, chol(as(sy2, "dpoMatrix")), tolerance= 1e-13)) str(c2)
stopifnot(all.equal(c2, chol(as(sy2, "dpoMatrix")), tolerance= 1e-13))
str(c2)
(c2 <- chol(sy2)) #-> "Cholesky" matrix
sy2 <- new("dsyMatrix", Dim = as.integer(c(2,2)), x = c(14, NA,32,77))
sy2
class(sy2)
class(MA)
class(A)
A = readMM("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx",
package = "Matrix")
B = readHB("/Users/nicoloripamonti/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/Matrici/ex15.mtx")
library(Matrix)
library(e1071)
start_time <- Sys.time()
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
C = chol(A)
y = solve(t(C), b)
x = solve(C, y)
end_time <- Sys.time()
end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
object.size(chol(A))
library(e1071)
library(e1071)
source('~/Desktop/università/Magistrale/Secondo Semestre/Metodi del Calcolo Scientifico/Progetto/MCS_Project/R/script.R')
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory = object.size(chol(A))
Memory
Time
A = readMM("../Matrici/ex15.mtx")
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
time()
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A%*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
errore = norm(x - xe) / norm(as.matrix(xe))
format(errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
format(Time, scientific = TRUE)
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
A = readMM("../Matrici/ex15.mtx")
xe = rep(1, times = nrow(A))
b = A %*% xe
start_time <- Sys.time()
C = chol(A)
end_time <- Sys.time()
Memory = object.size(chol(A))
y = solve(t(C), b)
x = solve(C, y)
Time  = end_time - start_time
format(Time, scientific = TRUE)
xe = as.matrix(xe)
Errore = norm(x - xe) / norm(as.matrix(xe))
format(Errore, scientific = TRUE)
Memory
Time
